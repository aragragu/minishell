--------------------------W ahsen youbihi fal3alam-----------------------

exit
bash: exit: 3f: numeric argument required

cat << hey$HOME
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
➜ minishell💀$ cat << "hey"mmm
>hey
>$HOME
>heymmm
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
➜ minishell💀$ cat << 'hey'mmm
>hey
>$HOME
>heymmm
fd = [4]
fd === 4
hey
/Users/ykasmi
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

➜ minishell💀$ cat hey << hey << hey << hey  =============> ctrl-C

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\






$echo bonjour > test\ 1 ✅

passing
cat Makefile | grep pr | head -n 5 | cd test (mybin)



/************/*/*/*/*/*/*/*/*//*/*/*//*/*/*/*
/ls
 echo -nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn -nn ------------n
 cat | caat | ls

 





echo 2 >> out1 > out2  ✅
echo 2 > out1 >> out2   ✅
./minishell < /dev/urandom✅

 echo bonjour ; | ✅
 echo bonjour | | ✅
 |
 echo bonjour |; ✅
  echo bonjour |;  ❌
 cd $HOME/Documents  ✅
 echo "\s" & echo "\s" ✅
 echo >   ✅
 echo -n -n -nnnn -nnnnm ✅
 cat /dev/random | head -n 1 | cat -e   ✅
 unset var1 # with undefined var1 ✅
 export "" et unset ""   ✅
 echo test > file test1 ✅
 $ ✅
 not_cmd bonjour > salut  ✅ 
 env puis export puis env # vars aren't sorted ✅
 cat Makefile | grep pr | head -n 5 | cd test (mybin) # check status code ✅
 cat Makefile | grep pr | head -n 5 | cat test (bin) # check status code ✅
 cat Makefile | grep pr | head -n 5 | hello (NA) # check status code ✅
 echo bonjour >>> test ✅
 echo bonjour > > out ✅
 cat < test # with non-existent test   ✅
 export var; export var=test   ✅
 echo bonjour > $test # with test not defined  ✅
 file_name_in_current_dir
 cd ../../../../../.. ; pwd ✅
 ctrl-C . 130 sur bin(ex : sleep 10)&line vide
 ctrl-\ .131 sur bin
 echo "bip | bip" ✅
 echo "bip | bip ; coyotte > < "  ✅
 cat | cat | cat | ls # check outputs order ✅
cat | cat | caaat | ls  ///works at 11.34  ✅
  $bla # with bla not defined ✅
 export var ="cat Makefile | grep >" ✅
 export "test=ici"=coucou  ✅
 c$var Makefile # with var=at   ❌
 $LESS$VAR ✅
 /bin/echo bonjour ✅
 not_cmd ✅
 sleep 5 | exit  ✅
 "exit retour a la ligne"
 minishell # binary not in path without "./" before ✅
 cat diufosgid # check exit code
 exit # should return the last exit code value
 exit -10
 exit +10
 ;
 echo "$HOME" ✅
 echo '$HOME' ✅
 export ; env ✅
 echo $HOME ✅
 > log echo coucou  ✅
 echo hudifg d | | hugdfihd ✅
 echo ✅
 echo simple ✅
 echo -n simple ✅
 echo '' ✅
 echo "" ✅
 echo "\" ✅
 echo "\n \n \n" ✅
 echo "\n \n \\n"    ✅
 echo ;;  ✅
 echo hi";" hihi ✅
 echo hi " ; " hihi ✅
 cd ✅
 cd . ✅
 cd ~ ✅
 cd / ✅
 cd no_file ✅
 cd a b c d ✅
 pwd a ✅
 pwd a b c d ✅
 export LOL=lala ROR=rara ✅
 unset LOL ROR  ✅
 export "HI= hi"  ✅
 export "HI =hi" ✅
 /bin/ls ✅
 # write something the press ctrl+c ✅
 # write something then press ctrl+d ✅
 # write something then press ctrl+\ ✅
 echo $?
 l^Ds  ✅
 echo | ✅
 | echo ✅
 sort | ls # check output order ✅ 
 cat < > ✅ 
 cat < < ✅ 
 cat > > ✅ 
 > a ls > b < Makefile ✅
 echo > a Hello World!  ✅
 > a echo Hello World! ✅
 cat < Makefile | grep gcc > output  ✅
 exit 0 | exit 1
 exit 1 | exit 0

ls > file > file1 ✅
ls > f7 < nofile > f3 > f4 ✅

echo bonjour > $tes    

////////////////////////////////
export SHLVL=999 ✅ 
minishell  ✅ 
export == it should be empty like that SHLVL="" ✅ 
and in negative number should be 0 and then start from 0  ✅ 

Mini$hell$: cd ..
cd: error retrieving current directory: No such file or directory
Mini$hell$: env | grep PWD
PWD=/Users/sfellahi/Desktop/DEATH/1/2/3/4
OLDPWD=/Users/sfellahi/Desktop/DEATH /* add .. at the end of PWD when you inside deleted directory */
 echo -n -n -n -n ✅
 echo -nnnnnn n- hello ✅ 
 ls | > filenotfound | wc -l  ❌ it should not printf command not found just 0
 ls | << filenotfound | wc -l  ❌
 ls | $notvar  | wc -l   ❌ it should not printf command not found just 0


//////////////////////////
Mini$hell$: touch ggg ✅
Mini$hell$: ./ggg ✅
access: Permission denied ✅
Mini$hell$: chmod +x ggg ✅
Mini$hell$: ggg ✅
command not found: Bad address ✅
Mini$hell$: ./ggg ✅
command not found: Exec format error  ✅



declare -x _="./minishell" dont print this freacking variable in export nigga


Mini$hell$: echo $$$$USER ✅ 
USER ✅ 

Mini$hell$: export tt="ls -al" ✅ 
Mini$hell$: $tt ✅ 

declare -x _="./minishell"
declare -x __CF_USER_TEXT_ENCODING="0x1940A:0x0:0x0"
declare -x tt="ls -al"
declare -x ttt
Mini$hell$: export ttt=$ttt


Mini$hell$: unset  SECURITYSESSIONID USER MallocNanoZone COMMAND_MODE PATH HOME SHELL LaunchInstanceID __CF_USER_TEXT_ENCODING XPC_SERVICE_NAME SSH_AUTH_SOCK XPC_FLAGS LOGNAME TMPDIR ORIGINAL_XDG_CURRENT_DESKTOP SHLVL PWD OLDPWD ZSH PAGER LESS LSCOLORS LS_COLORS HOMEBREW_CACHE HOMEBREW_TEMP TERM_PROGRAM TERM_PROGRAM_VERSION LANG COLORTERM GIT_ASKPASS VSCODE_GIT_ASKPASS_NODE VSCODE_GIT_ASKPASS_EXTRA_ARGS VSCODE_GIT_ASKPASS_MAIN VSCODE_GIT_IPC_HANDLE VSCODE_INJECTION ZDOTDIR USER_ZDOTDIR TERM _ ✅
Mini$hell$: export✅

Mini$hell$: echo $$$"CUSER"✅
$"CUSER"✅

Mini$hell$: exit "88 55 98" ✅

Mini$hell$: mkdir ttt ✅
Mini$hell$: ttt/ ✅
is a directory: ttt/ ✅


Mini$hell$: cd .. ✅
Mini$hell$: env | grep PWD ✅
// pwd and oldpwd should not be added ✅



//////////////////////////////////////////////////////
Mini$hell$: cat << . << .. << ... ✅


Mini$hell$: export a=" " ✅ 
Mini$hell$: $a ✅ 
command not found: Bad address ✅ 


Mini$hell$: export a="ls -la < Makefile" ✅ 
Mini$hell$: $a ✅ 
ls: <: No such file or directory ✅
-rw-r--r--  1 sfellahi  candidate  2584 Sep  3 14:04 Makefile ✅



ls > saad <<< ls   ASK ILYASSSSSSSSSS

bash-3.2$ ./minishell_saad ✅ 
bash: ./minishell_saad: is a directory -> use stat function to check if it a directory ✅

env -i ./minishell -> SHLVL should  be shown only once command should work ✅


unset PATH  ✅
    --> bash : minishell -> run minishell ✅
    -> minishell: minishell -> command not found ✅

   ls > cat > ik | ls | cat | caat | ls ✅

Mini$hell$: echo $"$HOME" ✅
$/Users/sfellahi ✅

Mini$hell$: << $HOME ✅
> os ✅
> skos ✅
> $HOME ✅


<<ha ✅

cat<home ✅
<< < ✅
<<< ✅

export this=" "'HOME'""  ✅
Mini$hell$: echo $this  ✅
  'HOME'  ✅
bash-3.2$ exit "q" ✅



Mini$hell$: unset SECURITYSESSIONID USER MallocNanoZone COMMAND_MODE PATH HOME SHELL LaunchInstanceID __CF_USER_TEXT_ENCODING XPC_SERVICE_NAME SSH_AUTH_SOCK XPC_FLAGS LOGNAME TMPDIR ORIGINAL_XDG_CURRENT_DESKTOP SHLVL PWD OLDPWD ZSH PAGER LESS LSCOLORS LS_COLORS HOMEBREW_CACHE HOMEBREW_TEMP TERM_PROGRAM TERM_PROGRAM_VERSION LANG COLORTERM GIT_ASKPASS VSCODE_GIT_ASKPASS_NODE VSCODE_GIT_ASKPASS_EXTRA_ARGS VSCODE_GIT_ASKPASS_MAIN VSCODE_GIT_IPC_HANDLE VSCODE_INJECTION ZDOTDIR USER_ZDOTDIR TERM _
Mini$hell$: env ✅
Mini$hell$: export th ygq gqwe giqweb iujqwbek q ✅
Mini$hell$: echo $th ✅

Mini$hell$: export this=" "'HOME'"" ✅
Mini$hell$: echo $this ✅
'HOME' ✅

bash-3.2$ echo 'hello \\n'✅
hello \\n ✅
cat Makefile feefe > outfile | cat outfile ✅





/////////////////////////////////////


Mini$hell$: < sfdf cat | wc -l ✅
minishell: <: command not found ✅
       0✅


exit "4    5    7" ✅

exit 44 hh 44 ✅



echo hell''o"'' '" "'''"''"" ✅
exit ksdhfk khk hfkdh kdhkh kdfkdh ✅
exit 3 33 333 44 4 5 55 ✅


ls > a > b >b >> r✅

ls > a >> b < dsfkdskf < dkfdklf > c | cat ❌

ls > a > b >b >> r ✅

ls >>b ✅

ls > a > b >'b'

ls > a > b >' b'

ls > a > b > b ✅
ls >'  ' ✅

ls >' b'  ❌


export a b c -d | wc  ✅


export a=' '❌
Mini$hell$: $a❌


<< $""
 << a << b << c cat | cat -e
 
bash-3.2$ export a=" a     a     a   " b="   b     b       b   "
bash-3.2$ $a$b
bash: a: command not found
bash-3.2$ "$a$b"
bash:  a     a     a      b     b       b   : command not found


Mini$hell$: $_

Mini$hell$: 88
command not found: 88
Mini$hell$: echo $?
0

Mini$hell$: t9abi
command not found: t9abi
Mini$hell$: ./t9abi
Minishell: ./t9abi: Permission denied
Mini$hell$: env | grep PATH
PATH=/Users/sfellahi/.brew/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/munki:/Library/Apple/usr/bin:/Users/sfellahi/.brew/bin:.

Mini$hell$: grep ff
efwef
rgerg
ff
ff
heher
^X^C
Mini$hell$: Mini$hell$:       //signals

Mini$hell$: ./ls
Minishell: ./ls: Permission denied
Mini$hell$: echo $?
1

signals in heredoc

Mini$hell$: export t="ff    fff" ✅
Mini$hell$: > $t  ✅

echo "<< fin | << fin"

Mini$hell$: "    ls "  ✅

Mini$hell$: ls   << f"  "  
> ewfheiu
> f
command not found: ls

Mini$hell$: ls -al "gggg     "    
command not found: ls

xport ana+="1337"

 ""
Error: Failed to parse commands

declare -x aa="a  b"
declare -x saad="a  b"
Mini$hell$: export $saad
minishell: export: `a  b': not a valid identifier


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\

Mini$hell$: cat << "   "
>  
>  
>  
>  
>   
>  
>   
>    
cat:    : No such file or directory 



Mini$hell$: << ""
> 
AddressSanitizer:DEADLYSIGNAL
=================================================================
==20738==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x0001049d6f6b bp 0x7ffeeb230f60 sp 0x7ffeeb230f40 T0)


Mini$hell$: export a=""ls -la""
minishell: export: `-la': not a valid identifier

Mini$hell$: echo ll >  test 
open: Permission denied
Minishell: No such file or directory
Mini$hell$: echo $?
0


Mini$hell$: echo -nnnnnn ff



Mini$hell$: cat < Makefile 
open: Permission denied
Minishell: No such file or directory


 < Makefile  cat  | wc -l

 Mini$hell$: ./mini   exprect  No such file or directory


exit ggggg  (minishel wast minishell khaso yakhraj 4ir mn wahda )

exit eeeeeeee

Mini$hell$: cat < Makefile | wc -l

cat < Makefile Makefile < Makefile | wc -l > test


Mini$hell$: cat << $USER
> $uuuuu
> $USER
$uuuuu
Mini$hell$: 


 cat <<           |      <<  ll


cat Makefile >> | cat 

 << l > |  cat 






 ➜ minishell💀$ exit | exit h
AddressSanitizer:DEADLYSIGNAL
AddressSanitizer:DEADLYSIGNAL
=================================================================
=================================================================
==77128==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000018 (pc 0x0001084ffe36 bp 0x7ffee7722290 sp 0x7ffee7722230 T0)
==77173==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x0001084fee4a bp 0x7ffee7722290 sp 0x7ffee7722220 T0)
==77128==The signal is caused by a READ memory access.
==77128==Hint: address points to the zero page.
==77173==The signal is caused by a READ memory access.
==77173==Hint: address points to the zero page.
    #0 0x1084ffe36 in norm_excu_pipe3+0x156 (minishell:x86_64+0x100022e36)
    #0 0x1084fee4a in contains_red+0x7a (minishell:x86_64+0x100021e4a)
    #1 0x108500207 in execute_pipe+0x377 (minishell:x86_64+0x100023207)
    #1 0x108500058 in execute_pipe+0x1c8 (minishell:x86_64+0x100023058)
    #2 0x108502494 in execution+0x244 (minishell:x86_64+0x100025494)
    #2 0x108502494 in execution+0x244 (minishell:x86_64+0x100025494)
    #3 0x1084e61fe in read_input+0x79e (minishell:x86_64+0x1000091fe)
    #3 0x1084e61fe in read_input+0x79e (minishell:x86_64+0x1000091fe)
    #4 0x1084e243c in main+0x2c (minishell:x86_64+0x10000543c)
    #4 0x1084e243c in main+0x2c (minishell:x86_64+0x10000543c)
    #5 0x7fff6bd66cc8 in start+0x0 (libdyld.dylib:x86_64+0x1acc8)
    #5 0x7fff6bd66cc8 in start+0x0 (libdyld.dylib:x86_64+0x1acc8)


==77128==Register values:
==77173==Register values:
rax = 0x0000000000000018  rax = 0x0000000000000010  rbx = 0x00007ffee7722300  rbx = 0x00007ffee7722300  rcx = 0x0000000000000018  rcx = 0x0000000000000010  rdx = 0x0000100000000003  rdx = 0x0000100000000002  

rdi = 0x0000100000000000  rdi = 0x00007ffee7722520  rsi = 0x0000100000000000  rsi = 0x0000100000000000  rbp = 0x00007ffee7722290  rbp = 0x00007ffee7722290  rsp = 0x00007ffee7722220  rsp = 0x00007ffee7722230  

  r8 = 0x0000000000000400  r8 = 0x00000000032d9600    r9 = 0x0000000000000000  r9 = 0xffffffff00000000  r10 = 0x00007ffee77222c4  r10 = 0x00001fffdcee4458  r11 = 0x0000000000000246  r11 = 0x0000000000000246  

r12 = 0x0000000000000000  r12 = 0x0000000000000000  r13 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x00001fffdcee4498  r14 = 0x00001fffdcee4498  r15 = 0x0000000000000000  r15 = 0x0000000000000000  

AddressSanitizer can not provide additional info.
AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV (minishell:x86_64+0x100022e36) in norm_excu_pipe3+0x156
SUMMARY: AddressSanitizer: SEGV (minishell:x86_64+0x100021e4a) in contains_red+0x7a
==77173==ABORTING
==77128==ABORTING
[1]    77128 abort      ./minishell



***************************************************************************************



➜ minishell💀$  c$var Makefile
AddressSanitizer:DEADLYSIGNAL
=================================================================
==52152==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x00010a7fb5a0 bp 0x7ffee540b1f0 sp 0x7ffee540b170 T0)
==52152==The signal is caused by a READ memory access.
==52152==Hint: address points to the zero page.
    #0 0x10a7fb5a0 in ft_strdup+0xd0 (minishell:x86_64+0x1000075a0)
    #1 0x10a80228f in expand_var+0x2ff (minishell:x86_64+0x10000e28f)
    #2 0x10a801e8a in expand_var_list+0xb7a (minishell:x86_64+0x10000de8a)
    #3 0x10a7fcc92 in read_input+0x742 (minishell:x86_64+0x100008c92)
    #4 0x10a7f8f2c in main+0x2c (minishell:x86_64+0x100004f2c)
    #5 0x7fff730becc8 in start+0x0 (libdyld.dylib:x86_64+0x1acc8)

==52152==Register values:
rax = 0x0000000000000000  rbx = 0x00007ffee540b5a0  rcx = 0x0000100000000000  rdx = 0x0000100000000000  
rdi = 0x00007ffee540b4e0  rsi = 0x0000100000000000  rbp = 0x00007ffee540b1f0  rsp = 0x00007ffee540b170  
 r8 = 0x0000200000000000   r9 = 0x0000000000000000  r10 = 0xffffffffffffffff  r11 = 0x00000fffffffffff  
r12 = 0x0000000000000000  r13 = 0x0000000000000000  r14 = 0x00001fffdca81698  r15 = 0x0000000000000000  
AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV (minishell:x86_64+0x1000075a0) in ft_strdup+0xd0
==52152==ABORTING
[1]    52152 abort      ./minishell




