export export
export=1337
env -i ./minishell 
minishell: ls: env


./


////////////////////////////////////
echo ---------------nnnnnnnnnnnnnnnnn nsaad

/bin/ls
âžœ minishellðŸ’€$ cd ..
âžœ minishellðŸ’€$ export
declare -x PWD="/Users/ykasmi/Desktop/parss"
declare -x SHLVL="1"
declare -x _="/usr/bin/env"
declare -x PWD="/Users/ykasmi/Desktop/parss"
_=hello
touch said
âžœ minishellðŸ’€$ ./said
minishell: ./said: command not found
âžœ minishellðŸ’€$ chmod +x said
âžœ minishellðŸ’€$ ./said
minishell: ./said: command not found  check Errno    

check if is a directory
âžœ minishellðŸ’€$ saad/
minishell: saad/: command not found 


///////////////////////////////////////////////////////

Minishell$ echo "gello$$test$1gds$USER-L" gello$$test$1gds$USER-L$'hell$"' gello$$test$1gds$USER-L$'hell$'     //its not error
------------------------------------------------------------------------------------------------------------------------------------------
âžœ Minishell$ unset PWD            **********************************
âžœ Minishell$ cd ../
âžœ Minishell$ $PWD
âžœ Minishell$ echo $PWD
------------------------------------------------------------------------------------------------------------------------------------------
âžœ Minishell$ export a="b c= d="
âžœ Minishell$ export $a
âžœ Minishell$ export p=$a
âžœ Minishell$ export
declare -x COLORTERM="truecolor"
declare -x __CF_USER_TEXT_ENCODING="0x194C4:0x0:0x0"
declare -x a="b c= d="
declare -x b
declare -x c=""
declare -x d=""
declare -x p="b"
âžœ Minishell$ export p=$a
------------------------------------------------------------------------------------------------------------------------------------------
âžœ Minishell$ echo -n $USER >> a
ozahdiâžœ Minishell$
------------------------------------------------------------------------------------------------------------------------------------------
âžœ Minishell$ export p='"'                ***************************
âžœ Minishell$ echo $p
------------------------------------------------------------------------------------------------------------------------------------------
âžœ Minishell$ export l="src libft"
âžœ Minishell$ ls $l
ls: src libft: No such file or directory
------------------------------------------------------------------------------------------------------------------------------------------
âžœ Minishell$ cgjgc
cgjgc: command not found
âžœ Minishell$ ls | fgjcv | echo $?
fgjcv: command not found
127
------------------------------------------------------------------------------------------------------------------------------------------
âžœ Minishell$ ./minishell            ********************************
âžœ Minishell$ djf
djf: command not found
âžœ Minishell$ exit 
exit
âžœ Minishell$ echo $?
0
âžœ Minishell$ 
------------------------------------------------------------------------------------------------------------------------------------------
âžœ  push git:(master) âœ— env -i ./minishell                           (oussama)
âžœ Minishell$ unset USER
âžœ Minishell$ unset PWD 
=================================================================
==56480==ERROR: AddressSanitizer: heap-use-after-free on address 0x6040000000d0 at pc 0x00010184a6b2 bp 0x7ffeee3c6610 sp 0x7ffeee3c6608
READ of size 8 at 0x6040000000d0 thread T0
    #0 0x10184a6b1 in ft_add_enver+0x2a1 (/Users/ozahdi/Desktop/push/./minishell:x86_64+0x1000116b1)
    #1 0x101852017 in unset_builtin+0x2f7 (/Users/ozahdi/Desktop/push/./minishell:x86_64+0x100019017)

------------------------------------------------------------------------------------------------------------------------------------------
âžœ Minishell$ cat
^C
âžœ Minishell$ âžœ Minishell$ echo $?
2
âžœ Minishell$ cat
^\^\^\^\^\^\^C
âžœ Minishell$ âžœ Minishell$ 
âžœ Minishell$ echo $?
2
âžœ Minishell$ 
------------------------------------------------------------------------------------------------------------------------------------------
update $_              ****************************************
------------------------------------------------------------------------------------------------------------------------------------------
âžœ Minishell$ mkdir -p 1/1/1/1
âžœ Minishell$ cd 1/1/1/1
âžœ Minishell$ pwd
/Users/ozahdi/Desktop/push/1/1/1/1
âžœ Minishell$ cd ..
cd: ..: No such file or directory
âžœ Minishell$ pwd
minishell: pwd: : No such file or directory
âžœ Minishell$ echo $PWD
/Users/ozahdi/Desktop/push
âžœ Minishell$ echo $OLDPWD
/Users/ozahdi/Desktop/push
âžœ Minishell$ cd ..
cd: error retrieving current directory
âžœ Minishell$ cd ..
cd: error retrieving current directory
AddressSanitizer:DEADLYSIGNAL
=================================================================
==28585==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x000109f95fc7 bp 0x7ffee5c8c950 sp 0x7ffee5c8c950 T0)
==28585==The signal is caused by a READ memory access.
==28585==Hint: address points to the zero page.
    #0 0x109f95fc7 in ft_strncmp+0x47 (minishell:x86_64+0x100023fc7)
    #1 0x109f8c3f2 in handle_cd_directory+0x482 (minishell:x86_64+0x10001a3f2)
    #2 0x109f8bab3 in handle_cd_with_args+0x103 (minishell:x86_64+0x100019ab3)
    #3 0x109f8f6e5 in cd_builtin+0x115 (minishell:x86_64+0x10001d6e5)
------------------------------------------------------------------------------------------------------------------------------------------
âžœ Minishell$ exit | exit 100 | exit 1 2
exit: too many arguments
âžœ Minishell$ echo $?
0
âžœ Minishell$ exit | exit 100 | exit o
exit: numeric argument required
âžœ Minishell$ echo $?
1
âžœ Minishell$ 
------------------------------------------------------------------------------------------------------------------------------------------
bash-3.2$ exit 31423 fdf
exit
bash: exit: too many arguments
bash-3.2$ $?
bash: 1: command not found
------------------------------------------------------------------------------------------------------------------------------------------
./minishell
./minishell
ctr+c
------------------------------------------------------------------------------------------------------------------------------------------
bash-3.2$ exit gfd 312
exit
bash: exit: gfd: numeric argument required
âžœ  push git:(master) âœ— $?
zsh: command not found: 255
------------------------------------------------------------------------------------------------------------------------------------------
bash-3.2$ exit -92233720368547758081 # min/max long long
exit
bash: exit: -92233720368547758081: numeric argument required
------------------------------------------------------------------------------------------------------------------------------------------
bash-3.2$ exit 3123 312312 
exit
bash: exit: too many arguments
bash-3.2$ $?
bash: 1: command not found
------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------
âžœ Minishell$ unset  USER MallocNanoZone PATH LOGNAME SSH_AUTH_SOCK HOME SHELL __CF_USER_TEXT_ENCODING TMPDIR XPC_SERVICE_NAME XPC_FLAGS ORIGINAL_XDG_CURRENT_DESKTOP SHLVL PWD OLDPWDZSH PAGER LESS LSCOLORS LS_COLORS HOMEBREW_CACHE HOMEBREW_TEMP TERM_PROGRAM TERM_PROGRAM_VERSION LANG COLORTERM GIT_ASKPASS VSCODE_GIT_ASKPASS_NODE VSCODE_GIT_ASKPASS_EXTRA_ARGSVSCODE_GIT_ASKPASS_MAIN VSCODE_GIT_IPC_HANDLE VSCODE_INJECTION ZDOTDIR USER_ZDOTDIR TERM _
=================================================================
==16755==ERROR: AddressSanitizer: heap-use-after-free on address 0x604000000c90 at pc 0x0001058eb39a bp 0x7ffeea32cfa0 sp 0x7ffeea32cf98
READ of size 8 at 0x604000000c90 thread T0
    #0 0x1058eb399 in ft_find+0x89 (minishell:x86_64+0x100019399)
    #1 0x1058eaf40 in unset_builtin+0x220 (minishell:x86_64+0x100018f40)
    #2 0x1058e8c90 in execute_builtin+0x410 (minishell:x86_64+0x100016c90)
------------------------------------------------------------------------------------------------------------------------------------------
_=/Users/ozahdi/Desktop/new_vers/./minishell
------------------------------------------------------------------------------------------------------------------------------------------
âžœ Minishell$ ^C
âžœ Minishell$ echo $?
0
------------------------------------------------------------------------------------------------------------------------------------------
âžœ Minishell$ export ggg uuu+ lll                   
export: 'uuu+': not a valid identifier
âžœ Minishell$ echo $?
0
------------------------------------------------------------------------------------------------------------------------------------------
âžœ  new_vers git:(master) âœ— ./minishell           *******************************************
âžœ Minishell$ wewef
wewef: command not found
âžœ Minishell$ 
exit
âžœ  new_vers git:(master) âœ— echo $?
0
------------------------------------------------------------------------------------------------------------------------------------------
âžœ Minishell$ cat
^\^\^\^\^\^\
------------------------------------------------------------------------------------------------------------------------------------------
âžœ Minishell$ cat
^\^\^\^\^\^\^C
âžœ Minishell$ âžœ Minishell$ 
------------------------------------------------------------------------------------------------------------------------------------------
// update OLDPWD
âžœ Minishell$ cd ..
âžœ Minishell$ export
declare -x OLDPWD
declare -x PWD="/Users/ozahdi/Desktop"
declare -x SHLVL="1"
declare -x yyy
------------------------------------------------------------------------------------------------------------------------------------------
âžœ Minishell$ $PWD                     ************************************
/Users/ozahdi/Desktop: permission denied
------------------------------------------------------------------------------------------------------------------------------------------
âžœ Minishell$ env jjj   ************************ env: jjj: No such file or directory
------------------------------------------------------------------------------------------------------------------------------------------
âžœ Minishell$ exit " 77 88 99 "
exit
------------------------------------------------------------------------------------------------------------------------------------------
âžœ Minishell$ touch ls              *************************
âžœ Minishell$ export PATH+=:.
âžœ Minishell$ ls
ls: permission denied
------------------------------------------------------------------------------------------------------------------------------------------


















------------------------------------------------------------------------------------------------------------------------------------------
~ : change this with HOME PATH
------------------------------------------------------------------------------------------------------------------------------------------
bash-3.2$ << a | << b  | < > | << r
bash: syntax error near unexpected token `>'
> a
> b
------------------------------------------------------------------------------------------------------------------------------------------
bash-3.2$ << $"USER"
> $USER
> USER
------------------------------------------------------------------------------------------------------------------------------------------
âžœ Minishell$ cat << $USER
herdoc > $PWD
herdoc > $?
herdoc > ozahdi
herdoc > '$USER'
herdoc > $USER
/Users/ozahdi/Desktop/new_vers
?
ozahdi
'ozahdi'
------------------------------------------------------------------------------------------------------------------------------------------
âžœ Minishell$ << $"USER" => delemeter is USER
herdoc > USER
herdoc > $USER
------------------------------------------------------------------------------------------------------------------------------------------
bash-3.2$ echo $~""
$~
bash-3.2$ echo $-""
himBH
bash-3.2$ echo $!""
bash: !"": event not found
bash-3.2$ echo $@""

bash-3.2$ echo $#""
0
bash-3.2$ echo $.""
$.
bash-3.2$ echo $,""
$,
bash-3.2$ echo $""
------------------------------------------------------------------------------------------------------------------------------------------

bash-3.2$ echo "$"$
$$
bash-3.2$ echo $"$"$
$$
bash-3.2$ echo "$$$"
58168$
bash-3.2$ echo "$$"
58168
bash-3.2$ echo "$"
$
bash-3.2$ $$$"$"$$$
bash: 58168$58168$: command not found
bash-3.2$ echo $$$"$"$$$
58168$58168$
bash-3.2$ echo $$"$"$$$
58168$58168$
bash-3.2$ echo $$$""
58168
bash-3.2$ echo $$$"$"
58168$
bash-3.2$ echo $""

bash-3.2$ echo $
$
bash-3.2$ 
bash-3.2$ echo $''

bash-3.2$ echo $'$'
$
bash-3.2$ echo $'$$'
$$
bash-3.2$ echo $'$$$'
$$$
bash-3.2$ echo "$'$'"
$'$'
bash-3.2$ echo "$'$USER'"
$'ozahdi'
bash-3.2$ echo "$'$USER$'"
$'ozahdi$'
bash-3.2$ echo "$'$USER$'$"
$'ozahdi$'$
bash-3.2$ echo "$'$USER$'$"$ --------- check
$'ozahdi$'$$
bash-3.2$ echo "$$'$USER$'$"
58168'ozahdi$'$
bash-3.2$ echo "$$$'$USER$'$"
58168$'ozahdi$'$
bash-3.2$ echo "$$$""'$USER$'$"
58168$'ozahdi$'$
bash-3.2$ echo "$''$"
$''$
bash-3.2$ echo $""

bash-3.2$ echo "$"
$
bash-3.2$ echo $""

bash-3.2$ echo $""$
$
bash-3.2$ echo ''$""

bash-3.2$ echo  "'$USER'$"""
'ozahdi'$
bash-3.2$ echo  "'$USER'$""$"
'ozahdi'$$
bash-3.2$ echo  "'$USER'$"$""
'ozahdi'$
bash-3.2$ echo  "'$USER'$"$s""
'ozahdi'$
bash-3.2$ echo  "'$USER'$"$1""
'ozahdi'$
bash-3.2$ echo  "'$USER'$"$12""
'ozahdi'$2
bash-3.2$ echo  "'$USER'$"$12s""
'ozahdi'$2s
bash-3.2$ echo  ""$
$
bash-3.2$ echo  $""$
$
bash-3.2$ echo  $"$"$
$$
bash-3.2$ echo  "$"$
$$
bash-3.2$ $$$USER
bash: 58168ozahdi: command not found
bash-3.2$ ECHO $USER
ozahdi
bash-3.2$ << $""
> $
> 
bash-3.2$ << ''
> 
bash-3.2$ << ' '
> 
>  
bash-3.2$ 



âžœ Minishell$ ls
Makefile        include         libft           main.c          minishell       parsing         src             ztest.c
âžœ Minishell$ echo 

âžœ Minishell$ echo ""

âžœ Minishell$ echo $""

âžœ Minishell$ echo $""$
$
âžœ Minishell$ echo $"$"$
$
âžœ Minishell$ echo "$"

âžœ Minishell$ echo $
$
âžœ Minishell$ echo "$"

âžœ Minishell$ echo "$$"

âžœ Minishell$ echo "$$$"
$
âžœ Minishell$ echo $""

âžœ Minishell$  echo "$$$""'$USER$'$"
$'ozahdi'
âžœ Minishell$ echo $''

âžœ Minishell$ echo "$''"
''
âžœ Minishell$ echo "$''$"
''
âžœ Minishell$ echo ''$""

âžœ Minishell$ echo '$USER'$""
$USER
âžœ Minishell$ echo "'$USER'$"""
'ozahdi'
âžœ Minishell$ $$$USER
ozahdi: command not found
âžœ Minishell$ $$$$USER
USER: command not found
âžœ Minishell$ ECHO $$$$USER
USER
âžœ Minishell$ ECHO $$$$USER
âžœ Minishell$ 
exit







errors.txt



/*int calculate_num_cmds(char *input) {
    int num_cmds = 0;
    char *input_copy = strdup(input); // Make a copy of the input string

    // Use strtok to split the input by the pipe (|) character
    char *token = strtok(input_copy, "|");
    while (token != NULL) {
        num_cmds++;                   // Increment command count
        token = strtok(NULL, "|");     // Move to the next command
    }

    free(input_copy);                 // Free the duplicated string
    return num_cmds;                  // Return the total number of commands
}

// Function to execute piped commands
void execute_piped_commands(char *commands[], int num_cmds, t_var *var) {
    int pipefds[2 * (num_cmds - 1)];
    pid_t pids[MAX_CMDS];
    int i;

    // Create pipes
    (void)commands;
    for (i = 0; i < num_cmds - 1; i++) {
        if (pipe(pipefds + i * 2) == -1) {
            perror("pipe");
            exit(EXIT_FAILURE);
        }
    }

    for (i = 0; i < num_cmds; i++) {
        pids[i] = fork();
        if (pids[i] == 0) {
            // Child process

            // If not the first command, get input from previous pipe
            if (i > 0) {
                if (dup2(pipefds[(i - 1) * 2], STDIN_FILENO) == -1) {
                    perror("dup2 stdin");
                    exit(EXIT_FAILURE);
                }
            }

            // If not the last command, send output to next pipe
            if (i < num_cmds - 1) {
                if (dup2(pipefds[i * 2 + 1], STDOUT_FILENO) == -1) {
                    perror("dup2 stdout");
                    exit(EXIT_FAILURE);
                }
            }

            // Close all pipe file descriptors
            for (int j = 0; j < 2 * (num_cmds - 1); j++) {
                close(pipefds[j]);
            }

            // Execute the command
            ft_exc(var);  // Assuming `execute_single_command` runs the command
        } else if (pids[i] < 0) {
            perror("fork");
            exit(EXIT_FAILURE);
        }
    }

    // Parent process closes all pipes
    for (i = 0; i < 2 * (num_cmds - 1); i++) {
        close(pipefds[i]);
    }

    // Parent waits for all children
    for (i = 0; i < num_cmds; i++) {
        waitpid(pids[i], NULL, 0);
    }
}*/